df$effort <- as.factor(df$effort)
df$gender <- as.factor(df$gender)
#Descriptive Statistics
#analyze persistence and adult social model ONLY - t-test one-way ANOVA
tTest <- t.test(df$time, df$effort)
anova <- aov(time ~ effort, data = df)
tTest
tTest
anova
tTest
#Descriptive Statistics
#analyze persistence and adult social model ONLY - t-test one-way ANOVA
tTest <- t.test(df$time, df$effort)
#Descriptive Statistics
#analyze persistence and adult social model ONLY - t-test one-way ANOVA
tTest <- t.test(df$time, df$effort)
View(df)
View(df)
#analyze persistence and emotion regulation ONLY - Pearson correlation
pearCor <- cor(df$time, df$AER, method = 'pearson')
pearCor
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER, data = df)
multReg
summary(multReg)
#graphing our data
plot(df$AER, df$time)
#graphing our data
plot(df$AER, df$time, group = df$effort)
#graphing our data
plot(df$AER, df$time, group = df$effort)
#graphing our data
plot(df$AER, df$time, col = df$effort)
#Descriptive Statistics
#analyze persistence and adult social model ONLY - t-test one-way ANOVA
tTest <- t.test(time~effort, var.equal = TRUE, data = df)
tTest
library(sjmisc)
library(sjPlot)
library(kableExtra)
library(ggplot2)
#import our mock data set
df <- read.csv(file.choose()) #this is the data frame we will be working with
df$effort <- as.factor(df$effort)
df$sex <- as.factor(df$sex)
#Descriptive Statistics
#age
summary(df$age)
sd(df$age)
#AER
summary(df$AER)
sd(df$AER)
#time
summary(df$time)
sd(df$time)
#sex
table(df$sex)
#groups
table(df$effort)
#sex and effort
table(df$effort, df$sex)
#age and effort
table(df$effort, df$age)
#er in high
summary(df$ER[df$effort == "1"])
sd(df$ER[df$effort == "1"])
#er in low
summary(df$ER[df$effort == "0"])
sd(df$ER[df$effort == "0"])
#ln in high
summary(df$LN[df$effort == "1"])
sd(df$LN[df$effort == "1"])
#ln in low
summary(df$LN[df$effort == "0"])
sd(df$LN[df$effort == "0"])
#AER in high
summary(df$AER[df$effort == "1"])
sd(df$AER[df$effort == "1"])
#AER in low
summary(df$AER[df$effort == "0"])
sd(df$AER[df$effort == "0"])
#time in high
summary(df$time[df$effort == "0"])
sd(df$time[df$effort == "0"])
#time in low
summary(df$time[df$effort == "1"])
sd(df$time[df$effort == "1"])
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
#graphing our data (simple version)
plot(df$AER, df$time, col = df$effort)
View(df)
tab_model(multReg, show.se =TRUE, show.stat = TRUE)
#SJ plot model with visualization
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
#make sure to make variable names accurate like high and low
View(df)
summary(df$AER)
summary(df$age)
sd(df$age)
summary(df$LN[df$effort == "1"])
sd(df$LN[df$effort == "1"])
View(df)
#gender differences for Emotion Regulation
summary(df$AER[df$sex == "M"])
summary(df$AER[df$sex == "F"])
summary(df$ER[df$sex == "M"])
summary(df$ER[df$sex == "F"])
summary(df$LN[df$sex == "M"])
summary(df$LN[df$sex == "F"])
table(df$effort, df$sex)
#average age in effort conditions
summary(df$age[df$effort == 0])
sd(df$age[df$effort == 0])
summary(df$age[df$effort == 1])
sd(df$age[df$effort == 1])
summary(df$age)
sd(df$age)
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
multReg
summary(multReg)
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER, data = df)
summary(multReg)
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER + age, data = df)
multReg <- lm(effort~time * AER + age, data = df)
coef(summary(multReg))[,"t value"]
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
multReg1 <- lm(time~effort * AER + age, data = df[df$effort == 0,])
multReg1 <- lm(time~AER, data = df[df$effort == 0,])
summary(multReg1)
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
#graphing our data (simple version)
plot(df$AER, df$time, col = df$effort)
#SJ plot with regression table
tab_model(multReg, show.se =TRUE, show.stat = TRUE)
#Mock Statistical Analysis
library(sjPlot)
library(ggplot2)
#graphing our data (simple version)
plot(df$AER, df$time, col = df$effort)
#SJ plot with regression table
tab_model(multReg, show.se =TRUE, show.stat = TRUE)
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
#Mock Statistical Analysis
library(sjmisc)
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
library(kableExtra)
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
df$effort <- as.factor(df$effort)
df$sex <- as.factor(df$sex)
#Descriptive Statistics
#As a whole... in BOTH conditions
#age
summary(df$age)
sd(df$age)
#AER
summary(df$AER)
sd(df$AER)
#time
summary(df$time)
sd(df$time)
#sex
table(df$sex)
#how many participants in both conditions
table(df$effort)
#sex and effort
table(df$effort, df$sex)
#age and effort
table(df$effort, df$age)
#er in high
summary(df$ER[df$effort == "1"])
sd(df$ER[df$effort == "1"])
#er in low
summary(df$ER[df$effort == "0"])
sd(df$ER[df$effort == "0"])
#ln in high
summary(df$LN[df$effort == "1"])
sd(df$LN[df$effort == "1"])
#ln in low
summary(df$LN[df$effort == "0"])
sd(df$LN[df$effort == "0"])
#AER in high
summary(df$AER[df$effort == "1"])
sd(df$AER[df$effort == "1"])
#AER in low
summary(df$AER[df$effort == "0"])
sd(df$AER[df$effort == "0"])
#time in high
summary(df$time[df$effort == "0"])
sd(df$time[df$effort == "0"])
#time in low
summary(df$time[df$effort == "1"])
sd(df$time[df$effort == "1"])
#average age in low and high effort conditions
#low
summary(df$age[df$effort == 0])
sd(df$age[df$effort == 0])
#high
summary(df$age[df$effort == 1])
sd(df$age[df$effort == 1])
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
#graphing our data (simple version)
plot(df$AER, df$time, col = df$effort)
#SJ plot with regression table
tab_model(multReg, show.se =TRUE, show.stat = TRUE)
#SJ plot model with visualization
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
library(sjmisc)
library(sjPlot)
library(kableExtra)
library(ggplot2)
warnings()
summary(multReg)
View(df)
df.residual()
#import our mock data set
df <- read.csv(file.choose()) #this is the data frame we will be working with
#import our mock data set
df <- read.csv(file.choose()) #this is the data frame we will be working with
df$effort <- as.factor(df$effort)
df$sex <- as.factor(df$sex)
#Descriptive Statistics
#As a whole... in BOTH conditions
#age
summary(df$age)
sd(df$age)
#AER
summary(df$AER)
sd(df$AER)
#time
summary(df$time)
sd(df$time)
#sex
table(df$sex)
#how many participants in both conditions
table(df$effort)
#sex and effort
table(df$effort, df$sex)
#age and effort
table(df$effort, df$age)
#er in high
summary(df$ER[df$effort == "1"])
sd(df$ER[df$effort == "1"])
#er in low
summary(df$ER[df$effort == "0"])
sd(df$ER[df$effort == "0"])
#ln in high
summary(df$LN[df$effort == "1"])
sd(df$LN[df$effort == "1"])
#ln in low
summary(df$LN[df$effort == "0"])
sd(df$LN[df$effort == "0"])
#AER in high
summary(df$AER[df$effort == "1"])
sd(df$AER[df$effort == "1"])
#AER in low
summary(df$AER[df$effort == "0"])
sd(df$AER[df$effort == "0"])
#time in high
summary(df$time[df$effort == "0"])
sd(df$time[df$effort == "0"])
#time in low
summary(df$time[df$effort == "1"])
sd(df$time[df$effort == "1"])
#average age in low and high effort conditions
#low
summary(df$age[df$effort == 0])
sd(df$age[df$effort == 0])
#high
summary(df$age[df$effort == 1])
sd(df$age[df$effort == 1])
#gender differences for Emotion Regulation
summary(df$AER[df$sex == "M"])
summary(df$AER[df$sex == "F"])
summary(df$ER[df$sex == "M"])
summary(df$ER[df$sex == "F"])
summary(df$LN[df$sex == "M"])
summary(df$LN[df$sex == "F"])
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- lm(time~effort * AER + age, data = df)
coef(summary(multReg))[,"t value"]
#graphing our data (simple version)
plot(df$AER, df$time, col = df$effort)
#SJ plot with regression table
tab_model(multReg, show.se =TRUE, show.stat = TRUE)
summary(multReg)
summary(df$AER[df$sex == "M"])
summary(df$AER[df$sex == "F"])
#gender differences for Persistence
summary(df$time[df$sex == "M"])
summary(df$time[df$sex == "F"])
library(sjmisc)
library(sjPlot)
library(kableExtra)
library(ggplot2)
#import our mock data set
df <- read.csv(file.choose()) #this is the data frame we will be working with
df$effort <- as.factor(df$effort)
df$sex <- as.factor(df$sex)
summary(df$age)
sd(df$age)
#AER
summary(df$AER)
sd(df$AER)
#time
summary(df$time)
sd(df$time)
#sex
table(df$sex)
#how many participants in both conditions
table(df$effort)
#sex and effort
table(df$effort, df$sex)
#age and effort
table(df$effort, df$age)
#er in high
summary(df$ER[df$effort == "1"])
sd(df$ER[df$effort == "1"])
#er in low
summary(df$ER[df$effort == "0"])
sd(df$ER[df$effort == "0"])
#ln in high
summary(df$LN[df$effort == "1"])
sd(df$LN[df$effort == "1"])
#ln in low
summary(df$LN[df$effort == "0"])
sd(df$LN[df$effort == "0"])
#AER in high
summary(df$AER[df$effort == "1"])
sd(df$AER[df$effort == "1"])
#AER in low
summary(df$AER[df$effort == "0"])
sd(df$AER[df$effort == "0"])
#time in high
summary(df$time[df$effort == "0"])
sd(df$time[df$effort == "0"])
#time in low
summary(df$time[df$effort == "1"])
sd(df$time[df$effort == "1"])
#average age in low and high effort conditions
#low
summary(df$age[df$effort == 0])
sd(df$age[df$effort == 0])
#high
summary(df$age[df$effort == 1])
sd(df$age[df$effort == 1])
#gender differences for Emotion Regulation
summary(df$AER[df$sex == "M"])
summary(df$AER[df$sex == "F"])
summary(df$ER[df$sex == "M"])
summary(df$ER[df$sex == "F"])
summary(df$LN[df$sex == "M"])
summary(df$LN[df$sex == "F"])
#gender differences for Persistence
summary(df$time[df$sex == "M"])
summary(df$time[df$sex == "F"])
#analyze persistence with both adult social models and emotion regulation, we would run a multiple regression
multReg <- glm(time~effort * AER + age, data = df, family = "poisson")
coef(summary(multReg))[,"t value"]
coef(summary(multReg))[,"t value"]
summary(multReg)
summary(multReg)
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
p <- plot_model(multReg, type = "pred", terms = c("AER[1.0, 4.0]", "effort"),
axis.title = c("AER", "Time (seconds)"),
title = c("Predicted seconds of persistence across measures of AER"),
legend.title = c("Effort Condition"), alpha= 0.3)
apatheme=theme_bw()+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.line=element_line(),
axis.text= element_text(size = 12),
axis.title.x= element_text(margin = margin(t = 20, r = 0, b = 0, l = 0)),
axis.title.y= element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
#text=element_text(family='Times', size= 12),
plot.title= element_text(face = "italic", size = 12, margin = margin(t = 0, r = 0, b = 20, l = 0)),
legend.title=element_text(size = 12))
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
p
)
p + apatheme + scale_color_manual(name= "Effort Condition", values = c("red", "blue"), labels = c("Low", "High"))
confint(multReg)
#confidence intervals of our data
confint(multReg)
pchisq(deviance, df.residual, lower.tail=FALSE)))
pchisq(deviance, df.residual, lower.tail=FALSE)
with(multReg, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
glm?
?glm
?plot_model
library(sjPlot)
?plot_model
